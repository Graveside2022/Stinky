#!/bin/bash
# Final verification that all frequency profiles are available and functional

echo "üéØ Final OpenWebRX Profile Verification"
echo "========================================"

# Check 1: Container status
echo -e "\n1Ô∏è‚É£ Container Status:"
if docker ps | grep -q "openwebrx-hackrf"; then
    echo "‚úÖ OpenWebRX container is running"
    CONTAINER_STATUS=true
else
    echo "‚ùå OpenWebRX container is not running"
    CONTAINER_STATUS=false
fi

# Check 2: Web interface accessibility
echo -e "\n2Ô∏è‚É£ Web Interface:"
if curl -s --max-time 5 http://localhost:8073/ > /dev/null; then
    echo "‚úÖ Web interface accessible at http://localhost:8073"
    WEB_STATUS=true
else
    echo "‚ùå Web interface not accessible"
    WEB_STATUS=false
fi

# Check 3: Configuration verification
echo -e "\n3Ô∏è‚É£ Profile Configuration:"
if docker exec openwebrx-hackrf test -f /var/lib/openwebrx/sdrs.json; then
    echo "‚úÖ SDR configuration file exists"
    
    # Count profiles
    PROFILE_COUNT=$(docker exec openwebrx-hackrf jq '.sdrs.hackrf.profiles | length' /var/lib/openwebrx/sdrs.json 2>/dev/null)
    if [ "$PROFILE_COUNT" -gt 0 ]; then
        echo "‚úÖ Found $PROFILE_COUNT frequency profiles"
        
        # List each profile with key details
        echo -e "\nüìª Available Profiles:"
        docker exec openwebrx-hackrf jq -r '
            .sdrs.hackrf.profiles | 
            to_entries[] | 
            "  ‚Ä¢ \(.key | ascii_upcase): \(.value.name) (\(.value.center_freq / 1000000)MHz, \(.value.start_mod | ascii_upcase))"
        ' /var/lib/openwebrx/sdrs.json 2>/dev/null
        
        CONFIG_STATUS=true
    else
        echo "‚ùå No profiles found in configuration"
        CONFIG_STATUS=false
    fi
else
    echo "‚ùå SDR configuration file not found"
    CONFIG_STATUS=false
fi

# Check 4: HackRF hardware
echo -e "\n4Ô∏è‚É£ HackRF Hardware:"
if lsusb | grep -q "1d50:6089"; then
    echo "‚úÖ HackRF One detected on host"
    if docker exec openwebrx-hackrf ls /dev/bus/usb/001/ | grep -q "005"; then
        echo "‚úÖ HackRF accessible in container"
        HACKRF_STATUS=true
    else
        echo "‚ùå HackRF not accessible in container"
        HACKRF_STATUS=false
    fi
else
    echo "‚ùå HackRF One not detected"
    HACKRF_STATUS=false
fi

# Check 5: Required profiles verification
echo -e "\n5Ô∏è‚É£ Required Profiles Check:"
REQUIRED_PROFILES=("2m" "70cm" "fm_broadcast" "airband")
MISSING_PROFILES=()

for profile in "${REQUIRED_PROFILES[@]}"; do
    if docker exec openwebrx-hackrf jq -e ".sdrs.hackrf.profiles.${profile}" /var/lib/openwebrx/sdrs.json >/dev/null 2>&1; then
        echo "‚úÖ $profile profile configured"
    else
        echo "‚ùå $profile profile missing"
        MISSING_PROFILES+=("$profile")
    fi
done

if [ ${#MISSING_PROFILES[@]} -eq 0 ]; then
    PROFILES_COMPLETE=true
else
    PROFILES_COMPLETE=false
fi

# Summary
echo -e "\n" "="*50
echo "üìä VERIFICATION SUMMARY"
echo "="*50

CHECKS=(
    "Container Running:$CONTAINER_STATUS"
    "Web Interface:$WEB_STATUS"
    "Configuration:$CONFIG_STATUS"
    "HackRF Hardware:$HACKRF_STATUS"
    "All Profiles:$PROFILES_COMPLETE"
)

ALL_PASSED=true
for check in "${CHECKS[@]}"; do
    name="${check%:*}"
    status="${check#*:}"
    if [ "$status" = "true" ]; then
        echo "‚úÖ $name"
    else
        echo "‚ùå $name"
        ALL_PASSED=false
    fi
done

echo -e "\n" "="*50

if [ "$ALL_PASSED" = "true" ]; then
    echo "üéâ ALL CHECKS PASSED!"
    echo ""
    echo "Multiple frequency profiles are properly configured and available:"
    echo "‚Ä¢ 2M Amateur Band (145 MHz, NFM)"
    echo "‚Ä¢ 70CM Amateur Band (433 MHz, NFM)"  
    echo "‚Ä¢ FM Broadcast Band (100 MHz, WFM)"
    echo "‚Ä¢ Airband (120 MHz, AM)"
    echo ""
    echo "üåê Access OpenWebRX: http://localhost:8073"
    echo "üîë Login: admin / hackrf"
    echo "üéõÔ∏è Profiles selectable from dropdown in web interface"
    echo ""
    echo "‚ú® The system is ready for multi-band SDR operations!"
else
    echo "‚ö†Ô∏è  SOME CHECKS FAILED"
    echo ""
    echo "Issues detected that need attention:"
    [ "$CONTAINER_STATUS" = "false" ] && echo "‚Ä¢ Start OpenWebRX container"
    [ "$WEB_STATUS" = "false" ] && echo "‚Ä¢ Check network connectivity"
    [ "$CONFIG_STATUS" = "false" ] && echo "‚Ä¢ Verify SDR configuration"
    [ "$HACKRF_STATUS" = "false" ] && echo "‚Ä¢ Check HackRF connection"
    [ "$PROFILES_COMPLETE" = "false" ] && echo "‚Ä¢ Add missing profiles: ${MISSING_PROFILES[*]}"
fi

echo ""